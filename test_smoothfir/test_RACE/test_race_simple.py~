#! /usr/bin/env python

import sys
import time
import pyBrutefir
import thread

IN = 0
OUT = 1

def print_filter_data(agent, config):
    inch = agent.getChannels(IN)
    outch = agent.getChannels(OUT)
    filters = agent.getFilterData()
    for n in range(config.n_filters):
        print "Filter number:",n
        bfilter = filters[n] 
        print "Name:",bfilter.name
        fcontrol = agent.getFilterControl(n)
        if fcontrol.coeff > -1:
            print "Coeff. Index:",fcontrol.coeff, "Name:", config.coeffs[fcontrol.coeff].name
        else:
            print "No Coeff Index."
        print "Inputs:",agent.getFilternChannels(bfilter,0)
        inp_index = 0
        for inp in agent.getFilterChannels(bfilter,0):
            print inp, inch[inp].name
            print "Input attenuation: %.1f dB."%agent.get_filter_attenuation(bfilter.name, IN, inp_index)
            inp_index +=1
        print "Outputs:", agent.getFilternChannels(bfilter,1)
        outp_index = 0
        for outp in agent.getFilterChannels(bfilter,1):
            print outp, outch[outp].name
            print "Output attenuation: %.1f dB."%agent.get_filter_attenuation(bfilter.name, OUT, outp_index)
            outp_index +=1
        print "Filter Inputs:",agent.getFilternFilters(bfilter,0)
        for finp in agent.getFilterFilters(bfilter,0):
            print finp, filters[finp].name
        print "Filter Outputs:",agent.getFilternFilters(bfilter,1)
        for foutp in agent.getFilterFilters(bfilter,1):
            print foutp, filters[foutp].name      
        print "=============================================="
            
   
def main(configFile):
    print "Smoothfir object creation."
    b = pyBrutefir.Brutefir()
    print "Loading smoothfit config." 
    b.bfConf.bfconf_init(configFile)
    # link to smoothfir configuration data
    config = b.bfConf.bfconf
    print "Configuring RACE coeffs..."
    race = pyBrutefir.BFLOGIC_RACE(b.bfConf.bfconf, b.bfConf.icomm, b.bfRun)
    # RACE parameters:
    # Cross impulse attenuation: 5.0 dB
    # Cross impulse delay: 5 samples (5./44.1 ms)
    # Band filter from 200 Hz (12 dB/octave) to 6000 Hz (24 dB/octave)
    race.set_config('race direct', 'race cross', 5.0, 5, 200., 12., 6000., 24.)
    b.bfConf.add_bflogic(race)
    # smoothfir agent object for realtime commands 
    agent = pyBrutefir.BFLOGIC_PY(b.bfConf.bfconf, b.bfConf.icomm, b.bfRun)
    b.bfConf.add_bflogic(agent)
    print "Starting smoothfir." 
    b.bfRun.bfrun(b.bfConf.bfConv, b.bfConf.bfDelay, b.bfConf.bflogic)
    print "Smoothfir is running..."

    print_filter_data(agent, config)
    DT = time.time()

    ACTIVE = True
    while True:
        # Every 10 seconds RACE effect is switch on/switch off
        time.sleep(10)
        if ACTIVE == True:
            print "RACE Inactive"
            agent.change_filter_attenuation('race left cross', IN, 0, 90)
            agent.change_filter_attenuation('race right cross', IN, 0, 90)
            agent.change_filter_coeff('race left direct', -1)
            agent.change_filter_coeff('race right direct', -1)
            ACTIVE = False
        else:
            print "RACE active"
            agent.change_filter_attenuation('race left cross', IN, 0, 0)
            agent.change_filter_attenuation('race right cross', IN, 0, 0)
            agent.change_filter_coeff('race left direct', 0)
            agent.change_filter_coeff('race right direct', 0)
            ACTIVE = True
        print_filter_data(agent, config)
        print "Running time: %d s."%(time.time()-DT)

if __name__ == "__main__":
    main(sys.argv[1])

